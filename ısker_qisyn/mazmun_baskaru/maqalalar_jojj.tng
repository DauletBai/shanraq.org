// maqalalar_jojj.tng - Мақалалар JOJJ интерфейсі
// Articles JOJJ Interface

import "framework/jojj/jojj_interface.tng";

// Мақалалар JOJJ классы
class MaqalalarJOJJ extends JOJJBase {
    constructor(connection: DatabaseConnection) {
        super("maqalalar", connection);
    }
    
    // Jasau - Мақала жасау
    atqar maqala_jasau(title: jol, content: jol, author_id: jol, category_id: jol, status: jol) -> JsonObject {
        // Валидация
        jasau validation: JsonObject = maqala_tekseu_jasau(title, content);
        
        eгер (!json_object_get_boolean(validation, "valid")) {
            jasau error: JsonObject = json_object_create();
            json_object_set_boolean(error, "success", jin);
            json_object_set_string(error, "error", "Validation failed");
            json_object_set_array(error, "validation_errors", json_object_get_array(validation, "errors"));
            qaytar error;
        }
        
        // Проверка существования автора
        jasau author: JsonObject = paydalanu_oqu(author_id);
        
        eгер (author == NULL) {
            jasau error: JsonObject = json_object_create();
            json_object_set_boolean(error, "success", jin);
            json_object_set_string(error, "error", "Author not found");
            qaytar error;
        }
        
        // Проверка существования категории
        eгер (category_id != "") {
            jasau category: JsonObject = sanat_oqu(category_id);
            
            eгер (category == NULL) {
                jasau error: JsonObject = json_object_create();
                json_object_set_boolean(error, "success", jin);
                json_object_set_string(error, "error", "Category not found");
                qaytar error;
            }
        }
        
        // Создание статьи
        jasau article: JsonObject = json_object_create();
        json_object_set_string(article, "title", title);
        json_object_set_string(article, "content", content);
        json_object_set_string(article, "author_id", author_id);
        json_object_set_string(article, "category_id", category_id);
        json_object_set_string(article, "status", status);
        json_object_set_string(article, "slug", maqala_slug_jasau(title));
        json_object_set_number(article, "views", 0);
        json_object_set_number(article, "likes", 0);
        json_object_set_number(article, "dislikes", 0);
        
        jasau result: JsonObject = this.jasau(article);
        
        qaytar result;
    }
    
    // Oqu - Мақаланы алу
    atqar maqala_oqu(id: jol) -> JsonObject {
        jasau article: JsonObject = this.oqu(id);
        
        eгер (article != NULL) {
            // Увеличиваем количество просмотров
            jasau update_data: JsonObject = json_object_create();
            json_object_set_number(update_data, "views", json_object_get_number(article, "views") + 1);
            this.janartu(id, update_data);
            
            // Добавляем информацию об авторе
            jasau author: JsonObject = paydalanu_oqu(json_object_get_string(article, "author_id"));
            json_object_set_object(article, "author", author);
            
            // Добавляем информацию о категории
            jasau category_id: jol = json_object_get_string(article, "category_id");
            eгер (category_id != "") {
                jasau category: JsonObject = sanat_oqu(category_id);
                json_object_set_object(article, "category", category);
            }
        }
        
        qaytar article;
    }
    
    // Oqu - Барлық мақалаларды алу
    atqar maqalalar_oqu_barlik() -> JsonObject[] {
        jasau articles: JsonObject[] = this.oqu_barlik();
        
        // Добавляем информацию об авторах и категориях
        jasau i: san = 0;
        azirshe (i < articles.length) {
            jasau article: JsonObject = articles[i];
            
            // Добавляем автора
            jasau author: JsonObject = paydalanu_oqu(json_object_get_string(article, "author_id"));
            json_object_set_object(article, "author", author);
            
            // Добавляем категорию
            jasau category_id: jol = json_object_get_string(article, "category_id");
            eгер (category_id != "") {
                jasau category: JsonObject = sanat_oqu(category_id);
                json_object_set_object(article, "category", category);
            }
            
            i = i + 1;
        }
        
        qaytar articles;
    }
    
    // Oqu - Мақалаларды іздеу
    atqar maqalalar_oqu_izdeu(title: jol, content: jol, author_id: jol, category_id: jol, status: jol) -> JsonObject[] {
        jasau criteria: JsonObject = json_object_create();
        
        eгер (title != "") {
            json_object_set_string(criteria, "title", title);
        }
        
        eгер (content != "") {
            json_object_set_string(criteria, "content", content);
        }
        
        eгер (author_id != "") {
            json_object_set_string(criteria, "author_id", author_id);
        }
        
        eгер (category_id != "") {
            json_object_set_string(criteria, "category_id", category_id);
        }
        
        eгер (status != "") {
            json_object_set_string(criteria, "status", status);
        }
        
        jasau articles: JsonObject[] = this.oqu_izdeu(criteria);
        
        // Добавляем информацию об авторах и категориях
        jasau i: san = 0;
        azirshe (i < articles.length) {
            jasau article: JsonObject = articles[i];
            
            // Добавляем автора
            jasau author: JsonObject = paydalanu_oqu(json_object_get_string(article, "author_id"));
            json_object_set_object(article, "author", author);
            
            // Добавляем категорию
            jasau category_id: jol = json_object_get_string(article, "category_id");
            eгер (category_id != "") {
                jasau category: JsonObject = sanat_oqu(category_id);
                json_object_set_object(article, "category", category);
            }
            
            i = i + 1;
        }
        
        qaytar articles;
    }
    
    // Janartu - Мақаланы жаңарту
    atqar maqala_janartu(id: jol, title: jol, content: jol, category_id: jol, status: jol) -> JsonObject {
        // Проверка существования статьи
        jasau existing: JsonObject = this.oqu(id);
        
        eгер (existing == NULL) {
            jasau error: JsonObject = json_object_create();
            json_object_set_boolean(error, "success", jin);
            json_object_set_string(error, "error", "Article not found");
            qaytar error;
        }
        
        // Проверка существования категории (если изменилась)
        eгер (category_id != "" && category_id != json_object_get_string(existing, "category_id")) {
            jasau category: JsonObject = sanat_oqu(category_id);
            
            eгер (category == NULL) {
                jasau error: JsonObject = json_object_create();
                json_object_set_boolean(error, "success", jin);
                json_object_set_string(error, "error", "Category not found");
                qaytar error;
            }
        }
        
        // Подготовка данных для обновления
        jasau update_data: JsonObject = json_object_create();
        
        eгер (title != "") {
            json_object_set_string(update_data, "title", title);
            json_object_set_string(update_data, "slug", maqala_slug_jasau(title));
        }
        
        eгер (content != "") {
            json_object_set_string(update_data, "content", content);
        }
        
        eгер (category_id != "") {
            json_object_set_string(update_data, "category_id", category_id);
        }
        
        eгер (status != "") {
            json_object_set_string(update_data, "status", status);
        }
        
        qaytar this.janartu(id, update_data);
    }
    
    // Joiu - Мақаланы жою
    atqar maqala_joiu(id: jol) -> aqıqat {
        // Проверка существования статьи
        jasau article: JsonObject = this.oqu(id);
        
        eгер (article == NULL) {
            qaytar jin;
        }
        
        qaytar this.joiu(id);
    }
    
    // Дополнительные методы
    atqar maqala_koz_arttyru(id: jol) -> aqıqat {
        jasau article: JsonObject = this.oqu(id);
        
        eгер (article == NULL) {
            qaytar jin;
        }
        
        jasau update_data: JsonObject = json_object_create();
        json_object_set_number(update_data, "views", json_object_get_number(article, "views") + 1);
        
        jasau result: JsonObject = this.janartu(id, update_data);
        qaytar json_object_get_boolean(result, "success");
    }
    
    atqar maqala_uyattyru(id: jol) -> aqıqat {
        jasau article: JsonObject = this.oqu(id);
        
        eгер (article == NULL) {
            qaytar jin;
        }
        
        jasau update_data: JsonObject = json_object_create();
        json_object_set_number(update_data, "likes", json_object_get_number(article, "likes") + 1);
        
        jasau result: JsonObject = this.janartu(id, update_data);
        qaytar json_object_get_boolean(result, "success");
    }
    
    atqar maqala_uyattyru_joiu(id: jol) -> aqıqat {
        jasau article: JsonObject = this.oqu(id);
        
        eгер (article == NULL) {
            qaytar jin;
        }
        
        jasau update_data: JsonObject = json_object_create();
        json_object_set_number(update_data, "dislikes", json_object_get_number(article, "dislikes") + 1);
        
        jasau result: JsonObject = this.janartu(id, update_data);
        qaytar json_object_get_boolean(result, "success");
    }
    
    atqar maqalalar_author_boyynsha(author_id: jol) -> JsonObject[] {
        jasau criteria: JsonObject = json_object_create();
        json_object_set_string(criteria, "author_id", author_id);
        
        qaytar this.oqu_izdeu(criteria);
    }
    
    atqar maqalalar_category_boyynsha(category_id: jol) -> JsonObject[] {
        jasau criteria: JsonObject = json_object_create();
        json_object_set_string(criteria, "category_id", category_id);
        
        qaytar this.oqu_izdeu(criteria);
    }
    
    atqar maqalalar_popular() -> JsonObject[] {
        jasau sql: jol = "SELECT * FROM " + this.table_name + " WHERE status = 'published' ORDER BY views DESC, likes DESC LIMIT 10";
        jasau result: QueryResult = database_query_ishke_engizu(this.connection, sql);
        
        eгер (result.success) {
            qaytar result.rows;
        }
        
        qaytar [];
    }
    
    atqar maqalalar_recent() -> JsonObject[] {
        jasau sql: jol = "SELECT * FROM " + this.table_name + " WHERE status = 'published' ORDER BY created_at DESC LIMIT 10";
        jasau result: QueryResult = database_query_ishke_engizu(this.connection, sql);
        
        eгер (result.success) {
            qaytar result.rows;
        }
        
        qaytar [];
    }
    
    atqar maqalalar_statistika() -> JsonObject {
        jasau total_sql: jol = "SELECT COUNT(*) as total FROM " + this.table_name;
        jasau published_sql: jol = "SELECT COUNT(*) as published FROM " + this.table_name + " WHERE status = 'published'";
        jasau draft_sql: jol = "SELECT COUNT(*) as draft FROM " + this.table_name + " WHERE status = 'draft'";
        jasau total_views_sql: jol = "SELECT SUM(views) as total_views FROM " + this.table_name;
        
        jasau total_result: QueryResult = database_query_ishke_engizu(this.connection, total_sql);
        jasau published_result: QueryResult = database_query_ishke_engizu(this.connection, published_sql);
        jasau draft_result: QueryResult = database_query_ishke_engizu(this.connection, draft_sql);
        jasau views_result: QueryResult = database_query_ishke_engizu(this.connection, total_views_sql);
        
        jasau stats: JsonObject = json_object_create();
        json_object_set_number(stats, "total_articles", total_result.rows[0].total);
        json_object_set_number(stats, "published_articles", published_result.rows[0].published);
        json_object_set_number(stats, "draft_articles", draft_result.rows[0].draft);
        json_object_set_number(stats, "total_views", views_result.rows[0].total_views);
        
        qaytar stats;
    }
}
