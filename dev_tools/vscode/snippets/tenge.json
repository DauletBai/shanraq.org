{
  "Function Declaration": {
    "prefix": "func",
    "body": [
      "atqar ${1:function_name}(${2:parameters}) -> ${3:return_type} {",
      "    ${4:// function body}",
      "    qaytar ${5:value};",
      "}"
    ],
    "description": "Create a Tenge function"
  },
  "Variable Declaration": {
    "prefix": "var",
    "body": [
      "jasau ${1:variable_name}: ${2:type} = ${3:value};"
    ],
    "description": "Create a Tenge variable"
  },
  "If Statement": {
    "prefix": "if",
    "body": [
      "eger (${1:condition}) {",
      "    ${2:// if body}",
      "}"
    ],
    "description": "Create an if statement"
  },
  "If-Else Statement": {
    "prefix": "ifelse",
    "body": [
      "eger (${1:condition}) {",
      "    ${2:// if body}",
      "} aitpese {",
      "    ${3:// else body}",
      "}"
    ],
    "description": "Create an if-else statement"
  },
  "While Loop": {
    "prefix": "while",
    "body": [
      "azirshe (${1:condition}) {",
      "    ${2:// loop body}",
      "}"
    ],
    "description": "Create a while loop"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "jasau ${1:i}: san = 0;",
      "azirshe (${1:i} < ${2:limit}) {",
      "    ${3:// loop body}",
      "    ${1:i} = ${1:i} + 1;",
      "}"
    ],
    "description": "Create a for loop"
  },
  "Class Declaration": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName} {",
      "    ${2:// class members}",
      "}"
    ],
    "description": "Create a Tenge class"
  },
  "Import Statement": {
    "prefix": "import",
    "body": [
      "import \"${1:module_path}\";"
    ],
    "description": "Create an import statement"
  },
  "JSON Object": {
    "prefix": "json",
    "body": [
      "jasau ${1:object_name}: JsonObject = json_object_create();",
      "json_object_set_string(${1:object_name}, \"${2:key}\", ${3:value});"
    ],
    "description": "Create a JSON object"
  },
  "Web Server": {
    "prefix": "server",
    "body": [
      "atqar web_server_jasau(port: san) -> WebServer {",
      "    jasau server: WebServer = web_server_create(port);",
      "    qaytar server;",
      "}"
    ],
    "description": "Create a web server function"
  },
  "Template Engine": {
    "prefix": "template",
    "body": [
      "atqar template_engine_jasau() -> TemplateEngine {",
      "    jasau engine: TemplateEngine = template_engine_create();",
      "    qaytar engine;",
      "}"
    ],
    "description": "Create a template engine function"
  },
  "Archetype Pattern": {
    "prefix": "archetype",
    "body": [
      "atqar ${1:archetype_name}_arhetip_pattern_jasau() -> ArchetypePattern {",
      "    jasau pattern: ArchetypePattern = ArchetypePattern();",
      "    pattern.name = \"${1:archetype_name}\";",
      "    qaytar pattern;",
      "}"
    ],
    "description": "Create an archetype pattern"
  },
  "Morpheme Function": {
    "prefix": "morpheme",
    "body": [
      "atqar morpheme_${1:action}_jasau(${2:parameters}) -> ${3:return_type} {",
      "    ${4:// morpheme processing}",
      "    qaytar ${5:result};",
      "}"
    ],
    "description": "Create a morpheme-based function"
  },
  "Phoneme Function": {
    "prefix": "phoneme",
    "body": [
      "atqar phoneme_${1:action}_opt(${2:parameters}) -> ${3:return_type} {",
      "    ${4:// phoneme optimization}",
      "    qaytar ${5:result};",
      "}"
    ],
    "description": "Create a phoneme-based function"
  },
  "SIMD Function": {
    "prefix": "simd",
    "body": [
      "#pragma omp simd",
      "atqar simd_${1:operation}_jasau(${2:parameters}) -> ${3:return_type} {",
      "    ${4:// SIMD operations}",
      "    qaytar ${5:result};",
      "}"
    ],
    "description": "Create a SIMD function"
  },
  "Try-Catch": {
    "prefix": "try",
    "body": [
      "try {",
      "    ${1:// try body}",
      "} catch (${2:error}) {",
      "    ${3:// catch body}",
      "}"
    ],
    "description": "Create a try-catch block"
  },
  "Comment Block": {
    "prefix": "comment",
    "body": [
      "/*",
      " * ${1:comment}",
      " */"
    ],
    "description": "Create a comment block"
  }
}
