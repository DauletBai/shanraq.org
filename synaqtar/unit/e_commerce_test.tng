// e_commerce_test.tng - E-commerce –±—ñ—Ä–ª—ñ–∫ —Ç–µ—Å—Ç—Ç–µ—Ä—ñ
// Unit tests for e-commerce functionality

atqar e_commerce_test_jasau() -> TestSuite {
    jasau test_suite: TestSuite = test_suite_jasau("E-Commerce Tests");
    qaytar test_suite;
}

// Test product creation
atqar test_onim_jasau() -> aqƒ±qat {
    jasau result: JsonObject = onim_jasau(
        "Test Product",
        "Test product description",
        99.99,
        "electronics",
        10,
        "seller123"
    );
    
    e–≥–µ—Ä (json_object_get_boolean(result, "success")) {
        korset("‚úÖ Product creation test passed");
        qaytar jan;
    } aitpese {
        korset("‚ùå Product creation test failed");
        qaytar jin;
    }
}

// Test cart functionality
atqar test_sebet_jasau() -> aqƒ±qat {
    jasau cart: JsonObject = json_object_create();
    json_object_set_string(cart, "user_id", "user123");
    json_object_set_array(cart, "items", []);
    json_object_set_number(cart, "total", 0);
    
    jasau result: aqƒ±qat = sebet_derekterna_saktau(cart);
    
    e–≥–µ—Ä (result) {
        korset("‚úÖ Cart creation test passed");
        qaytar jan;
    } aitpese {
        korset("‚ùå Cart creation test failed");
        qaytar jin;
    }
}

// Test order creation
atqar test_buyrys_jasau() -> aqƒ±qat {
    jasau shipping_address: JsonObject = json_object_create();
    json_object_set_string(shipping_address, "street", "123 Test St");
    json_object_set_string(shipping_address, "city", "Test City");
    json_object_set_string(shipping_address, "zip", "12345");
    
    jasau result: JsonObject = buyrys_jasau(
        "user123",
        "cart123",
        shipping_address,
        "credit_card"
    );
    
    e–≥–µ—Ä (json_object_get_boolean(result, "success")) {
        korset("‚úÖ Order creation test passed");
        qaytar jan;
    } aitpese {
        korset("‚ùå Order creation test failed");
        qaytar jin;
    }
}

// Test product validation
atqar test_onim_tekseu() -> aqƒ±qat {
    jasau validation_result: JsonObject = onim_tekseu_jasau(
        "Valid Product",
        "Valid product description",
        50.00,
        5
    );
    
    e–≥–µ—Ä (json_object_get_boolean(validation_result, "valid")) {
        korset("‚úÖ Product validation test passed");
        qaytar jan;
    } aitpese {
        korset("‚ùå Product validation test failed");
        qaytar jin;
    }
}

// Run all e-commerce tests
atqar e_commerce_testlerin_ishke_engizu() {
    korset("üß™ E-commerce —Ç–µ—Å—Ç—Ç–µ—Ä—ñ–Ω —ñ—Å–∫–µ “õ–æ—Å—É...");
    
    jasau passed: san = 0;
    jasau total: san = 4;
    
    e–≥–µ—Ä (test_onim_jasau()) {
        passed = passed + 1;
    }
    
    e–≥–µ—Ä (test_sebet_jasau()) {
        passed = passed + 1;
    }
    
    e–≥–µ—Ä (test_buyrys_jasau()) {
        passed = passed + 1;
    }
    
    e–≥–µ—Ä (test_onim_tekseu()) {
        passed = passed + 1;
    }
    
    korset("üìä –¢–µ—Å—Ç –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ: " + passed + "/" + total + " ”©—Ç—Ç—ñ");
    
    e–≥–µ—Ä (passed == total) {
        korset("‚úÖ –ë–∞—Ä–ª—ã“õ e-commerce —Ç–µ—Å—Ç—Ç–µ—Ä—ñ —Å”ô—Ç—Ç—ñ ”©—Ç—Ç—ñ!");
    } aitpese {
        korset("‚ùå –ö–µ–π–±—ñ—Ä e-commerce —Ç–µ—Å—Ç—Ç–µ—Ä—ñ —Å”ô—Ç—Å—ñ–∑!");
    }
}

