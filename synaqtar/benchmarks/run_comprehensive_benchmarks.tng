// run_comprehensive_benchmarks.tng - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
// Run Comprehensive Benchmarks for Shanraq.org

import "benchmark_runner.tng";
import "benchmark_helpers.tng";
import "final_benchmark_report.tng";

// ==================== –û–°–ù–û–í–ù–û–ô –°–ö–†–ò–ü–¢ –ó–ê–ü–£–°–ö–ê ====================

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
atqar main() -> void {
    korset("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ë–ï–ù–ß–ú–ê–†–ö–ê SHANRAQ.ORG");
    korset("=====================================================");
    korset("üìÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: " + get_current_timestamp());
    korset("üîß –í–µ—Ä—Å–∏—è: 1.0.0");
    korset("üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: " + get_platform_info());
    korset("=====================================================");
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    eger (!check_system_requirements()) {
        korset("‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!");
        qaytar;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    korset("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...");
    initialize_benchmarks();
    
    // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
    korset("üìä –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...");
    jasau financial_results: FinancialMathResults = run_financial_math_benchmarks();
    
    korset("üíæ –ó–∞–ø—É—Å–∫ CRUD –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...");
    jasau crud_results: CRUDDatabaseResults = run_crud_database_benchmarks();
    
    korset("üåê –ó–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...");
    jasau network_results: NetworkResults = run_network_benchmarks();
    
    korset("üîç –ó–∞–ø—É—Å–∫ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...");
    jasau comparison_results: PerformanceComparison = compare_performance();
    
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    korset("üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...");
    jasau final_report: FinalBenchmarkReport = generate_final_benchmark_report();
    
    // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    korset("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ë–ï–ù–ß–ú–ê–†–ö–û–í:");
    korset("=====================================================");
    print_benchmark_results(financial_results, crud_results, network_results);
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —è–∑—ã–∫–∞–º–∏
    korset("üîç –°–†–ê–í–ù–ï–ù–ò–ï –° –î–†–£–ì–ò–ú–ò –Ø–ó–´–ö–ê–ú–ò:");
    korset("=====================================================");
    print_language_comparison(comparison_results);
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    korset("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    korset("=====================================================");
    print_recommendations(final_report.recommendations);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    korset("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...");
    save_comprehensive_report(final_report);
    
    korset("‚úÖ –í–°–ï –ë–ï–ù–ß–ú–ê–†–ö–ò –ó–ê–í–ï–†–®–ï–ù–´!");
    korset("üìÖ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: " + get_current_timestamp());
    korset("üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: benchmark_report_" + get_current_timestamp() + ".json");
}

// ==================== –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –¢–†–ï–ë–û–í–ê–ù–ò–ô ====================

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
atqar check_system_requirements() -> aqƒ±qat {
    korset("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...");
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    jasau available_memory: san = get_available_memory();
    eger (available_memory < 1024 * 1024 * 1024) { // 1GB
        korset("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏: " + float_to_string(available_memory / (1024 * 1024 * 1024)) + " GB");
        qaytar jalgiz;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU
    jasau cpu_cores: san = get_cpu_cores();
    eger (cpu_cores < 2) {
        korset("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —è–¥–µ—Ä CPU: " + int_to_string(cpu_cores));
        qaytar jalgiz;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    jasau free_space: san = get_free_disk_space();
    eger (free_space < 500 * 1024 * 1024) { // 500MB
        korset("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞: " + float_to_string(free_space / (1024 * 1024)) + " MB");
        qaytar jalgiz;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    eger (!check_network_connection()) {
        korset("‚ùå –ù–µ—Ç —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è");
        qaytar jalgiz;
    }
    
    korset("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã");
    qaytar jan;
}

// ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
atqar initialize_benchmarks() -> void {
    // –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    create_temp_directories();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    initialize_test_database();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_benchmark_environment();
    
    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    cleanup_previous_results();
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
atqar create_temp_directories() -> void {
    create_directory("temp/benchmarks");
    create_directory("temp/databases");
    create_directory("temp/logs");
    create_directory("temp/results");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
atqar initialize_test_database() -> void {
    jasau connection: DatabaseConnection = sqlite_connection_jasau("temp/benchmarks/test.db");
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü
    sql_execute(connection, "CREATE TABLE IF NOT EXISTS test_users (id INTEGER PRIMARY KEY, name TEXT, email TEXT)");
    sql_execute(connection, "CREATE TABLE IF NOT EXISTS test_orders (id INTEGER PRIMARY KEY, user_id INTEGER, amount REAL)");
    sql_execute(connection, "CREATE TABLE IF NOT EXISTS test_products (id INTEGER PRIMARY KEY, name TEXT, price REAL)");
    
    connection_close(connection);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
atqar setup_benchmark_environment() -> void {
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    set_environment_variable("BENCHMARK_MODE", "true");
    set_environment_variable("BENCHMARK_OUTPUT", "temp/results/");
    set_environment_variable("BENCHMARK_VERBOSE", "true");
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_benchmark_logging();
}

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
atqar cleanup_previous_results() -> void {
    delete_directory("temp/benchmarks");
    delete_directory("temp/databases");
    delete_directory("temp/logs");
    delete_directory("temp/results");
}

// ==================== –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ====================

// –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
atqar print_benchmark_results(financial: FinancialMathResults, crud: CRUDDatabaseResults, network: NetworkResults) -> void {
    // –§–∏–Ω–∞–Ω—Å–æ–≤–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    korset("üìä –§–ò–ù–ê–ù–°–û–í–û-–ú–ê–¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:");
    korset("  üé≤ –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ: " + float_to_string(financial.monte_carlo.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üî¢ –§–∏–±–æ–Ω–∞—á—á–∏: " + float_to_string(financial.fibonacci.execution_time * 1000) + " –º—Å");
    korset("  üìà –ë—ã—Å—Ç—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: " + float_to_string(financial.quicksort.execution_time * 1000) + " –º—Å");
    korset("  üî¢ –ú–∞—Ç—Ä–∏—á–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ: " + float_to_string(financial.matrix_multiplication.execution_time * 1000) + " –º—Å");
    korset("  üìê –ß–∏—Å–ª–µ–Ω–Ω–æ–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ: " + float_to_string(financial.numerical_integration.execution_time * 1000) + " –º—Å");
    korset("  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: " + float_to_string(financial.statistical_calculations.execution_time * 1000) + " –º—Å");
    
    // CRUD —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    korset("üíæ CRUD –ë–ê–ó–ê –î–ê–ù–ù–´–• –†–ï–ó–£–õ–¨–¢–ê–¢–´:");
    korset("  ‚ûï –°–æ–∑–¥–∞–Ω–∏–µ (Jasau): " + float_to_string(crud.create_benchmark.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üëÅÔ∏è –ß—Ç–µ–Ω–∏–µ (Oqu): " + float_to_string(crud.read_benchmark.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ (Janartu): " + float_to_string(crud.update_benchmark.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ (Joiu): " + float_to_string(crud.delete_benchmark.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üîÑ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: " + float_to_string(crud.complex_operations.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üí≥ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: " + float_to_string(crud.transactions.operations_per_second) + " –æ–ø/—Å–µ–∫");
    
    // –°–µ—Ç–µ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    korset("üåê –°–ï–¢–ï–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:");
    korset("  üåê HTTP –∑–∞–ø—Ä–æ—Å—ã: " + float_to_string(network.http_requests.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üìÑ JSON –ø–∞—Ä—Å–∏–Ω–≥: " + float_to_string(network.json_parsing.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üîå WebSocket: " + float_to_string(network.websocket_connections.operations_per_second) + " –æ–ø/—Å–µ–∫");
    korset("  üéØ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: " + float_to_string(network.api_endpoints.operations_per_second) + " –æ–ø/—Å–µ–∫");
}

// –í—ã–≤–æ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —è–∑—ã–∫–∞–º–∏
atqar print_language_comparison(comparison: PerformanceComparison) -> void {
    korset("üîç –°–†–ê–í–ù–ï–ù–ò–ï –° –î–†–£–ì–ò–ú–ò –Ø–ó–´–ö–ê–ú–ò:");
    
    for (jasau i: san = 0; i < comparison.languages.length; i++) {
        jasau lang: LanguageBenchmarkData = comparison.languages[i];
        korset("  " + lang.language + ":");
        korset("    –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ: " + float_to_string(lang.monte_carlo_ops_per_sec) + " –æ–ø/—Å–µ–∫");
        korset("    –§–∏–±–æ–Ω–∞—á—á–∏: " + float_to_string(lang.fibonacci_time_ms) + " –º—Å");
        korset("    –ë—ã—Å—Ç—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: " + float_to_string(lang.quicksort_time_ms) + " –º—Å");
        korset("    –ú–∞—Ç—Ä–∏—á–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ: " + float_to_string(lang.matrix_mult_time_ms) + " –º—Å");
        korset("    CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏: " + float_to_string(lang.crud_ops_per_sec) + " –æ–ø/—Å–µ–∫");
        korset("    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: " + float_to_string(lang.memory_usage_mb) + " MB");
        korset("    –í—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: " + float_to_string(lang.compilation_time_ms) + " –º—Å");
        korset("");
    }
    
    korset("üèÜ –õ–£–ß–®–ò–ô –ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨: " + comparison.best_performer);
    korset("üìä –†–ï–ô–¢–ò–ù–ì SHANRAQ.ORG: " + int_to_string(comparison.shanraq_ranking) + "/6");
}

// –í—ã–≤–æ–¥ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
atqar print_recommendations(recommendations: Recommendations) -> void {
    korset("üí° –ö–†–ê–¢–ö–û–°–†–û–ß–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    for (jasau i: san = 0; i < recommendations.short_term.length; i++) {
        eger (recommendations.short_term[i] != "") {
            korset("  ‚Ä¢ " + recommendations.short_term[i]);
        }
    }
    
    korset("üí° –°–†–ï–î–ù–ï–°–†–û–ß–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    for (jasau i: san = 0; i < recommendations.medium_term.length; i++) {
        eger (recommendations.medium_term[i] != "") {
            korset("  ‚Ä¢ " + recommendations.medium_term[i]);
        }
    }
    
    korset("üí° –î–û–õ–ì–û–°–†–û–ß–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    for (jasau i: san = 0; i < recommendations.long_term.length; i++) {
        eger (recommendations.long_term[i] != "") {
            korset("  ‚Ä¢ " + recommendations.long_term[i]);
        }
    }
    
    korset("üí° –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:");
    for (jasau i: san = 0; i < recommendations.priority.length; i++) {
        eger (recommendations.priority[i] != "") {
            korset("  ‚≠ê " + recommendations.priority[i]);
        }
    }
}

// ==================== –°–û–•–†–ê–ù–ï–ù–ò–ï –û–¢–ß–ï–¢–ê ====================

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
atqar save_comprehensive_report(report: FinalBenchmarkReport) -> void {
    jasau timestamp: jol = get_current_timestamp();
    jasau filename: jol = "temp/results/comprehensive_benchmark_report_" + timestamp + ".json";
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ JSON
    jasau json_data: jol = convert_final_report_to_json(report);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    write_file(filename, json_data);
    
    // –°–æ–∑–¥–∞–Ω–∏–µ HTML –æ—Ç—á–µ—Ç–∞
    jasau html_filename: jol = "temp/results/benchmark_report_" + timestamp + ".html";
    jasau html_data: jol = convert_final_report_to_html(report);
    write_file(html_filename, html_data);
    
    korset("üìÑ JSON –æ—Ç—á–µ—Ç: " + filename);
    korset("üìÑ HTML –æ—Ç—á–µ—Ç: " + html_filename);
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ JSON
atqar convert_final_report_to_json(report: FinalBenchmarkReport) -> jol {
    jasau json: jol = "{";
    json = json + "\"timestamp\":\"" + report.timestamp + "\",";
    json = json + "\"version\":\"" + report.version + "\",";
    json = json + "\"executive_summary\":{";
    json = json + "\"overall_rating\":\"" + report.executive_summary.overall_rating + "\",";
    json = json + "\"performance_score\":" + float_to_string(report.executive_summary.performance_score) + ",";
    json = json + "\"optimization_potential\":" + float_to_string(report.executive_summary.optimization_potential);
    json = json + "}";
    json = json + "}";
    qaytar json;
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ HTML
atqar convert_final_report_to_html(report: FinalBenchmarkReport) -> jol {
    jasau html: jol = "";
    html = html + "<!DOCTYPE html>";
    html = html + "<html><head><title>Shanraq.org Benchmark Report</title></head>";
    html = html + "<body>";
    html = html + "<h1>Shanraq.org Benchmark Report</h1>";
    html = html + "<p>Timestamp: " + report.timestamp + "</p>";
    html = html + "<p>Version: " + report.version + "</p>";
    html = html + "<h2>Executive Summary</h2>";
    html = html + "<p>Overall Rating: " + report.executive_summary.overall_rating + "</p>";
    html = html + "<p>Performance Score: " + float_to_string(report.executive_summary.performance_score) + "/100</p>";
    html = html + "<p>Optimization Potential: " + float_to_string(report.executive_summary.optimization_potential * 100) + "%</p>";
    html = html + "</body></html>";
    qaytar html;
}

// ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
atqar get_platform_info() -> jol {
    qaytar get_os_name() + " " + get_os_version();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–∞–º—è—Ç–∏
atqar get_available_memory() -> san {
    qaytar get_system_memory();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è–¥–µ—Ä CPU
atqar get_cpu_cores() -> san {
    qaytar get_cpu_count();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
atqar get_free_disk_space() -> san {
    qaytar get_disk_free_space();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
atqar check_network_connection() -> aqƒ±qat {
    qaytar test_network_connectivity();
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
atqar create_directory(path: jol) -> void {
    create_dir(path);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
atqar delete_directory(path: jol) -> void {
    remove_dir(path);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤
atqar setup_benchmark_logging() -> void {
    setup_logger("benchmark", "temp/logs/benchmark.log");
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
atqar connection_close(connection: DatabaseConnection) -> void {
    sqlite_connection_close(connection);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
atqar set_environment_variable(name: jol, value: jol) -> void {
    set_env_var(name, value);
}

// –ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
atqar write_file(filename: jol, content: jol) -> void {
    file_write(filename, content);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
atqar create_dir(path: jol) -> void {
    mkdir(path);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
atqar remove_dir(path: jol) -> void {
    rmdir(path);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
atqar setup_logger(name: jol, filename: jol) -> void {
    configure_logger(name, filename);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
atqar set_env_var(name: jol, value: jol) -> void {
    set_environment_variable(name, value);
}

// –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
atqar file_write(filename: jol, content: jol) -> void {
    write_to_file(filename, content);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –û–°
atqar get_os_name() -> jol {
    qaytar get_operating_system_name();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –û–°
atqar get_os_version() -> jol {
    qaytar get_operating_system_version();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø–∞–º—è—Ç–∏
atqar get_system_memory() -> san {
    qaytar get_total_memory();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ CPU
atqar get_cpu_count() -> san {
    qaytar get_processor_count();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
atqar get_disk_free_space() -> san {
    qaytar get_free_disk_space_bytes();
}

// –¢–µ—Å—Ç —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
atqar test_network_connectivity() -> aqƒ±qat {
    qaytar test_network_connection();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
atqar configure_logger(name: jol, filename: jol) -> void {
    setup_logging(name, filename);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
atqar set_environment_variable(name: jol, value: jol) -> void {
    putenv(name, value);
}

// –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
atqar write_to_file(filename: jol, content: jol) -> void {
    save_file(filename, content);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
atqar get_operating_system_name() -> jol {
    qaytar get_os_name_string();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
atqar get_operating_system_version() -> jol {
    qaytar get_os_version_string();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π –ø–∞–º—è—Ç–∏
atqar get_total_memory() -> san {
    qaytar get_system_memory_bytes();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤
atqar get_processor_count() -> san {
    qaytar get_cpu_core_count();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –≤ –±–∞–π—Ç–∞—Ö
atqar get_free_disk_space_bytes() -> san {
    qaytar get_disk_free_bytes();
}

// –¢–µ—Å—Ç —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
atqar test_network_connection() -> aqƒ±qat {
    qaytar test_network_connectivity();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
atqar setup_logging(name: jol, filename: jol) -> void {
    initialize_logger(name, filename);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
atqar putenv(name: jol, value: jol) -> void {
    set_env(name, value);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
atqar save_file(filename: jol, content: jol) -> void {
    write_file_content(filename, content);
}
