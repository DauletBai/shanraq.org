// jojj_basqaru.tng - JOJJ API басқарушылары
// JOJJ API Basqaru

import "framework/jojj/jojj_interface.tng";
import "ısker_qisyn/paydalanu_baskaru/paydalanusylar_jojj.tng";
import "ısker_qisyn/mazmun_baskaru/maqalalar_jojj.tng";
import "ısker_qisyn/mazmun_baskaru/sanattar_jojj.tng";

// Глобальные экземпляры JOJJ классов
jasau global_paydalanusylar: PaydalanusylarJOJJ = NULL;
jasau global_maqalalar: MaqalalarJOJJ = NULL;
jasau global_sanattar: SanattarJOJJ = NULL;

// Инициализация JOJJ басқарушылары
atqar jojj_basqaru_initialize() -> aqıqat {
    jasau connection: DatabaseConnection = sqlite_connection_jasau("tenge_web.db");
    
    global_paydalanusylar = new PaydalanusylarJOJJ(connection);
    global_maqalalar = new MaqalalarJOJJ(connection);
    global_sanattar = new SanattarJOJJ(connection);
    
    korset("✅ JOJJ басқарушылары іске қосылды");
    qaytar jan;
}

// ==================== ПАЙДАЛАНУШЫЛАР API ====================

// GET /api/v1/paydalanusylar - Барлық пайдаланушыларды алу
atqar api_paydalanusylar_oqu_barlik(request: TengeRequest, response: TengeResponse) {
    jasau users: JsonObject[] = global_paydalanusylar.paydalanusylar_oqu_barlik();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_array(result, "users", users);
    json_object_set_number(result, "count", users.length);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/paydalanusylar/:id - Пайдаланушыны алу
atqar api_paydalanu_oqu(request: TengeRequest, response: TengeResponse) {
    jasau user_id: jol = request.params.id;
    jasau user: JsonObject = global_paydalanusylar.paydalanu_oqu(user_id);
    
    eгер (user == NULL) {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "User not found");
        response.json_qaytar(error, 404);
        qaytar;
    }
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_object(result, "user", user);
    
    response.json_qaytar(result, 200);
}

// POST /api/v1/paydalanusylar - Пайдаланушы жасау
atqar api_paydalanu_jasau(request: TengeRequest, response: TengeResponse) {
    jasau body: JsonObject = request.body;
    
    jasau name: jol = json_object_get_string(body, "name");
    jasau email: jol = json_object_get_string(body, "email");
    jasau password: jol = json_object_get_string(body, "password");
    jasau role: jol = json_object_get_string(body, "role");
    
    jasau result: JsonObject = global_paydalanusylar.paydalanu_jasau(name, email, password, role);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 201);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// PUT /api/v1/paydalanusylar/:id - Пайдаланушыны жаңарту
atqar api_paydalanu_janartu(request: TengeRequest, response: TengeResponse) {
    jasau user_id: jol = request.params.id;
    jasau body: JsonObject = request.body;
    
    jasau name: jol = json_object_get_string(body, "name");
    jasau email: jol = json_object_get_string(body, "email");
    jasau role: jol = json_object_get_string(body, "role");
    jasau status: jol = json_object_get_string(body, "status");
    
    jasau result: JsonObject = global_paydalanusylar.paydalanu_janartu(user_id, name, email, role, status);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 200);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// DELETE /api/v1/paydalanusylar/:id - Пайдаланушыны жою
atqar api_paydalanu_joiu(request: TengeRequest, response: TengeResponse) {
    jasau user_id: jol = request.params.id;
    jasau result: aqıqat = global_paydalanusylar.paydalanu_joiu(user_id);
    
    eгер (result) {
        jasau response_obj: JsonObject = json_object_create();
        json_object_set_boolean(response_obj, "success", jan);
        json_object_set_string(response_obj, "message", "User deleted successfully");
        response.json_qaytar(response_obj, 200);
    } aitpese {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "Failed to delete user");
        response.json_qaytar(error, 400);
    }
}

// ==================== МАҚАЛАЛАР API ====================

// GET /api/v1/maqalalar - Барлық мақалаларды алу
atqar api_maqalalar_oqu_barlik(request: TengeRequest, response: TengeResponse) {
    jasau articles: JsonObject[] = global_maqalalar.maqalalar_oqu_barlik();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_array(result, "articles", articles);
    json_object_set_number(result, "count", articles.length);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/maqalalar/:id - Мақаланы алу
atqar api_maqala_oqu(request: TengeRequest, response: TengeResponse) {
    jasau article_id: jol = request.params.id;
    jasau article: JsonObject = global_maqalalar.maqala_oqu(article_id);
    
    eгер (article == NULL) {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "Article not found");
        response.json_qaytar(error, 404);
        qaytar;
    }
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_object(result, "article", article);
    
    response.json_qaytar(result, 200);
}

// POST /api/v1/maqalalar - Мақала жасау
atqar api_maqala_jasau(request: TengeRequest, response: TengeResponse) {
    jasau body: JsonObject = request.body;
    
    jasau title: jol = json_object_get_string(body, "title");
    jasau content: jol = json_object_get_string(body, "content");
    jasau author_id: jol = json_object_get_string(body, "author_id");
    jasau category_id: jol = json_object_get_string(body, "category_id");
    jasau status: jol = json_object_get_string(body, "status");
    
    jasau result: JsonObject = global_maqalalar.maqala_jasau(title, content, author_id, category_id, status);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 201);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// PUT /api/v1/maqalalar/:id - Мақаланы жаңарту
atqar api_maqala_janartu(request: TengeRequest, response: TengeResponse) {
    jasau article_id: jol = request.params.id;
    jasau body: JsonObject = request.body;
    
    jasau title: jol = json_object_get_string(body, "title");
    jasau content: jol = json_object_get_string(body, "content");
    jasau category_id: jol = json_object_get_string(body, "category_id");
    jasau status: jol = json_object_get_string(body, "status");
    
    jasau result: JsonObject = global_maqalalar.maqala_janartu(article_id, title, content, category_id, status);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 200);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// DELETE /api/v1/maqalalar/:id - Мақаланы жою
atqar api_maqala_joiu(request: TengeRequest, response: TengeResponse) {
    jasau article_id: jol = request.params.id;
    jasau result: aqıqat = global_maqalalar.maqala_joiu(article_id);
    
    eгер (result) {
        jasau response_obj: JsonObject = json_object_create();
        json_object_set_boolean(response_obj, "success", jan);
        json_object_set_string(response_obj, "message", "Article deleted successfully");
        response.json_qaytar(response_obj, 200);
    } aitpese {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "Failed to delete article");
        response.json_qaytar(error, 400);
    }
}

// ==================== САНАТТАР API ====================

// GET /api/v1/sanattar - Барлық санаттарды алу
atqar api_sanattar_oqu_barlik(request: TengeRequest, response: TengeResponse) {
    jasau categories: JsonObject[] = global_sanattar.sanattar_oqu_barlik();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_array(result, "categories", categories);
    json_object_set_number(result, "count", categories.length);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/sanattar/:id - Санатты алу
atqar api_sanat_oqu(request: TengeRequest, response: TengeResponse) {
    jasau category_id: jol = request.params.id;
    jasau category: JsonObject = global_sanattar.sanat_oqu(category_id);
    
    eгер (category == NULL) {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "Category not found");
        response.json_qaytar(error, 404);
        qaytar;
    }
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_object(result, "category", category);
    
    response.json_qaytar(result, 200);
}

// POST /api/v1/sanattar - Санат жасау
atqar api_sanat_jasau(request: TengeRequest, response: TengeResponse) {
    jasau body: JsonObject = request.body;
    
    jasau name: jol = json_object_get_string(body, "name");
    jasau description: jol = json_object_get_string(body, "description");
    jasau parent_id: jol = json_object_get_string(body, "parent_id");
    jasau color: jol = json_object_get_string(body, "color");
    jasau icon: jol = json_object_get_string(body, "icon");
    
    jasau result: JsonObject = global_sanattar.sanat_jasau(name, description, parent_id, color, icon);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 201);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// PUT /api/v1/sanattar/:id - Санатты жаңарту
atqar api_sanat_janartu(request: TengeRequest, response: TengeResponse) {
    jasau category_id: jol = request.params.id;
    jasau body: JsonObject = request.body;
    
    jasau name: jol = json_object_get_string(body, "name");
    jasau description: jol = json_object_get_string(body, "description");
    jasau parent_id: jol = json_object_get_string(body, "parent_id");
    jasau color: jol = json_object_get_string(body, "color");
    jasau icon: jol = json_object_get_string(body, "icon");
    jasau sort_order: san = json_object_get_number(body, "sort_order");
    
    jasau result: JsonObject = global_sanattar.sanat_janartu(category_id, name, description, parent_id, color, icon, sort_order);
    
    eгер (json_object_get_boolean(result, "success")) {
        response.json_qaytar(result, 200);
    } aitpese {
        response.json_qaytar(result, 400);
    }
}

// DELETE /api/v1/sanattar/:id - Санатты жою
atqar api_sanat_joiu(request: TengeRequest, response: TengeResponse) {
    jasau category_id: jol = request.params.id;
    jasau result: aqıqat = global_sanattar.sanat_joiu(category_id);
    
    eгер (result) {
        jasau response_obj: JsonObject = json_object_create();
        json_object_set_boolean(response_obj, "success", jan);
        json_object_set_string(response_obj, "message", "Category deleted successfully");
        response.json_qaytar(response_obj, 200);
    } aitpese {
        jasau error: JsonObject = json_object_create();
        json_object_set_boolean(error, "success", jin);
        json_object_set_string(error, "error", "Failed to delete category");
        response.json_qaytar(error, 400);
    }
}

// ==================== ДОПОЛНИТЕЛЬНЫЕ API ====================

// GET /api/v1/maqalalar/popular - Популярные статьи
atqar api_maqalalar_popular(request: TengeRequest, response: TengeResponse) {
    jasau articles: JsonObject[] = global_maqalalar.maqalalar_popular();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_array(result, "articles", articles);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/maqalalar/recent - Последние статьи
atqar api_maqalalar_recent(request: TengeRequest, response: TengeResponse) {
    jasau articles: JsonObject[] = global_maqalalar.maqalalar_recent();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_array(result, "articles", articles);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/sanattar/hierarchy - Иерархия категорий
atqar api_sanattar_hierarchy(request: TengeRequest, response: TengeResponse) {
    jasau hierarchy: JsonObject = global_sanattar.sanattar_hierarchy();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_object(result, "hierarchy", hierarchy);
    
    response.json_qaytar(result, 200);
}

// GET /api/v1/statistics - Статистика
atqar api_statistics(request: TengeRequest, response: TengeResponse) {
    jasau user_stats: JsonObject = global_paydalanusylar.paydalanusylar_statistika();
    jasau article_stats: JsonObject = global_maqalalar.maqalalar_statistika();
    jasau category_stats: JsonObject = global_sanattar.sanattar_statistika();
    
    jasau result: JsonObject = json_object_create();
    json_object_set_boolean(result, "success", jan);
    json_object_set_object(result, "users", user_stats);
    json_object_set_object(result, "articles", article_stats);
    json_object_set_object(result, "categories", category_stats);
    
    response.json_qaytar(result, 200);
}
